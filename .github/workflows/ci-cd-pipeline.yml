name: CI/CD Pipeline for Node.js Project

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  install-and-test:
    name: Install, Lint, and Test
    runs-on: ubuntu-latest

    steps:
    # Étape 1 : Récupération du code
    - name: Checkout code
      uses: actions/checkout@v3

    # Étape 2 : Configuration de Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    # Étape 3 : Installation des dépendances
    - name: Install dependencies
      run: npm install

    # Étape 4 : Linter (ESLint)
    - name: Run linter
      run: npm run lint

    # Étape 5 : Exécution des tests unitaires
    - name: Run tests
      run: npm test

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: install-and-test

    steps:
    # Étape 6 : Récupération du code
    - name: Checkout code
      uses: actions/checkout@v3

    # Étape 7 : Configuration de Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    # Étape 8 : Installation des dépendances
    - name: Install dependencies
      run: npm install

    # Étape 9 : Build de l'application
    - name: Build application
      run: npm run build

    # Étape 10 : Déploiement
    - name: Deploy to Server
      env:
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_PRIVATE_KEY: ${{ secrets.SERVER_PRIVATE_KEY }}
        APP_PATH: '/var/www/reservationsalle'
      run: |
        echo "Déploiement sur le serveur"
        ssh -i $SERVER_PRIVATE_KEY $SERVER_USER@$SERVER_HOST "rm -rf $APP_PATH/*"
        scp -i $SERVER_PRIVATE_KEY -r ./build/* $SERVER_USER@$SERVER_HOST:$APP_PATH/
        ssh -i $SERVER_PRIVATE_KEY $SERVER_USER@$SERVER_HOST "cd $APP_PATH && pm2 restart all"

